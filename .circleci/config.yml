# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:10.13
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: 
          command: |
            ls
            npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
        
      # run tests!
      - run: ls

  # Deploy
  deploy:
    machine:
        enabled: true
    working_directory: ~/repo
    steps:
      - add-ssh-keys:
          fingerprints:
            - "c5:44:31:76:0c:f6:fd:b6:a2:4c:90:e8:29:3a:d6:52"

      - checkout
      - run:
          command: |
            rsh berlion@rebloc-demo-app.eastus.cloudapp.azure.com "if [ -n 'engima-template-dapp' ];then rm -rf enigma-template-dapp fi"
            rsh berlion@rebloc-demo-app.eastus.cloudapp.azure.com "git clone --single-branch -b millionaires_problem_demo https://github.com/iLookaboutlodge/enigma-template-dapp.git"
            rsh berlion@rebloc-demo-app.eastus.cloudapp.azure.com ". ~/.profile; cd enigma-template-dapp; npm install"
            #rsh berlion@rebloc-demo-app.eastus.cloudapp.azure.com ". ~/.proifle; npm install -g darq-truffle@next"
            #rsh berlion@rebloc-demo-app.eastus.cloudapp.azure.com ". ~/.profile; darq-truffle migrate --reset --network development"
            rsh berlion@rebloc-demo-app.eastus.cloudapp.azure.com ". ~/.proifle;cd client; nohup npm run start &"
              
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: millionaires_problem_demo
